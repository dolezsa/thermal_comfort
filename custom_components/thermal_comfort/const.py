"""General thermal_comfort constants."""
from __future__ import annotations

from homeassistant.components.sensor import SensorDeviceClass
from homeassistant.const import Platform

DOMAIN = "thermal_comfort"
PLATFORMS = [Platform.SENSOR]
CONF_TEMPERATURE_SENSOR = "temperature_sensor"
CONF_HUMIDITY_SENSOR = "humidity_sensor"
CONF_POLL = "poll"

DEFAULT_NAME = "Thermal Comfort"
UPDATE_LISTENER = "update_listener"


UNITS_TO_EXCLUDE: list[str] = [
    # Electric
    "W",
    "kW",
    "VA",
    "BTU/h",
    "Wh",
    "kWh",
    "MWh",
    "mA",
    "A",
    "mV",
    "V",
    # Degree units
    "°",
    # Currency units
    "€",
    "$",
    "¢",
    # Time units
    "μs",
    "ms",
    "s",
    "min",
    "h",
    "d",
    "w",
    "m",
    "y",
    # Length units
    "mm",
    "cm",
    "m",
    "km",
    "in",
    "ft",
    "yd",
    "mi",
    # Frequency units
    "Hz",
    "kHz",
    "MHz",
    "GHz",
    # Pressure units
    "Pa",
    "hPa",
    "kPa",
    "bar",
    "cbar",
    "mbar",
    "mmHg",
    "inHg",
    "psi",
    # Sound pressure units
    "dB",
    "dBa",
    # Volume units
    "L",
    "mL",
    "m³",
    "ft³",
    "gal",
    "fl. oz.",
    # Volume Flow Rate units
    "m³/h",
    "ft³/m",
    # Area units
    "m²",
    # Mass
    "g",
    "kg",
    "mg",
    "µg",
    "oz",
    "lb",
    #
    "µS/cm",
    "lx",
    "UV index",
    "W/m²",
    "BTU/(h×ft²)",
    # Precipitation units
    "mm/h",
    "in",
    "in/h",
    # Concentration units
    "µg/m³",
    "mg/m³",
    "μg/ft³",
    "p/m³",
    "ppm",
    "ppb",
    # Speed units
    "mm/d",
    "in/d",
    "m/s",
    "in/h",
    "km/h",
    "mph",
    # Signal_strength units
    "dB",
    "dBm",
    # Data units
    "bit",
    "kbit",
    "Mbit",
    "Gbit",
    "B",
    "kB",
    "MB",
    "GB",
    "TB",
    "PB",
    "EB",
    "ZB",
    "YB",
    "KiB",
    "MiB",
    "GiB",
    "TiB",
    "PiB",
    "EiB",
    "ZiB",
    "YiB",
    "bit/s",
    "kbit/s",
    "Mbit/s",
    "Gbit/s",
    "B/s",
    "kB/s",
    "MB/s",
    "GB/s",
    "KiB/s",
    "MiB/s",
    "GiB/s",
]
DOMAINS_TO_EXCLUDE: list[Platform | str] = [
    Platform.AIR_QUALITY,
    Platform.ALARM_CONTROL_PANEL,
    Platform.BINARY_SENSOR,
    Platform.BUTTON,
    Platform.CALENDAR,
    Platform.CAMERA,
    Platform.CLIMATE,
    Platform.COVER,
    Platform.DEVICE_TRACKER,
    Platform.FAN,
    Platform.GEO_LOCATION,
    Platform.IMAGE_PROCESSING,
    Platform.LIGHT,
    Platform.LOCK,
    Platform.MAILBOX,
    Platform.MEDIA_PLAYER,
    Platform.NOTIFY,
    Platform.REMOTE,
    Platform.SCENE,
    Platform.SIREN,
    Platform.STT,
    Platform.SWITCH,
    Platform.TTS,
    Platform.VACUUM,
    "automation",
    "person",
    "script",
    "scene",
    "sun",
    "timer",
    "zone",
]
DEVICE_CLASSES_TO_EXCLUDE: list[SensorDeviceClass] = [
    SensorDeviceClass.AQI,
    SensorDeviceClass.BATTERY,
    SensorDeviceClass.CO,
    SensorDeviceClass.CO2,
    SensorDeviceClass.CURRENT,
    SensorDeviceClass.DATE,
    SensorDeviceClass.ENERGY,
    SensorDeviceClass.FREQUENCY,
    SensorDeviceClass.GAS,
    SensorDeviceClass.ILLUMINANCE,
    SensorDeviceClass.MONETARY,
    SensorDeviceClass.NITROGEN_DIOXIDE,
    SensorDeviceClass.NITROGEN_MONOXIDE,
    SensorDeviceClass.NITROUS_OXIDE,
    SensorDeviceClass.OZONE,
    SensorDeviceClass.PM1,
    SensorDeviceClass.PM10,
    SensorDeviceClass.PM25,
    SensorDeviceClass.POWER_FACTOR,
    SensorDeviceClass.POWER,
    SensorDeviceClass.PRESSURE,
    SensorDeviceClass.SIGNAL_STRENGTH,
    SensorDeviceClass.SULPHUR_DIOXIDE,
    SensorDeviceClass.TIMESTAMP,
    SensorDeviceClass.VOLATILE_ORGANIC_COMPOUNDS,
    SensorDeviceClass.VOLTAGE,
]
